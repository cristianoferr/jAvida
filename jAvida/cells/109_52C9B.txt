#jAvida	Id:618818 Gen:214 ChildCount:10 Hash:109_52C9B Age:11252	Size: 109
#  = AX:4217[07] BX:4109[09] CX:118[08] DX:58[08] EX:1080[00] FX:110[00] GX:29[09] HX:8[08] IX:58[08] JX:118[08] SP:13[03] IP:62[02] E:-29 ID:618818
#Stack: 
13:: [47] =NOP_1
14:: [47] =NOP_1
15:: [47] =NOP_1
16:: [47] =NOP_1
17:: [34] =ZERO C              // C <- 0
19:: [33] =OR C                // C <- or(C) 
21:: [36] =SHL C               // C <- shiftLeft(C)  
23:: [36] =SHL C               // C <- shiftLeft(C)  
25:: [15] =ADRB A              // A <- templatePosition
27:: [46] =NOP_0
28:: [46] =NOP_0
29:: [46] =NOP_0
30:: [46] =NOP_0
31:: [23] =SUB A,C,A           // A <- A-C
35:: [25] =MOV A,B             // B <- A
38:: [16] =ADRF A              // A <- templatePosition
40:: [46] =NOP_0
41:: [46] =NOP_0
42:: [46] =NOP_0
43:: [47] =NOP_1
44:: [30] =CHG_ST 0            // changeStack 0
46:: [23] =SUB A,B,C           // C <- A-B
50:: [47] =NOP_1
51:: [41] =POP G               // G <- pop()
53:: [46] =NOP_0
54:: [48] =MAL C,A             // Allocate C Bytes; store position in A
57:: [5] =CALL                // push(ip) ; ip <- templatePosition
58:: [46] =NOP_0
59:: [46] =NOP_0
60:: [50] =50
61:: [47] =NOP_1
>62:: [1] =DIVIDE              // divide and start new program
63:: [9] =JMPB                // ip <- template position 
64:: [46] =NOP_0
65:: [46] =NOP_0
66:: [46] =NOP_0
67:: [50] =50
68:: [37] =SHR B               // B <- shiftRight(B)  
70:: [47] =NOP_1
71:: [47] =NOP_1
72:: [46] =NOP_0
73:: [46] =NOP_0
74:: [40] =PUSH A              // push A
76:: [40] =PUSH J              // push J
78:: [37] =SHR G               // G <- shiftRight(G)  
80:: [39] =DEC H               // H <- H - 1
82:: [47] =NOP_1
83:: [46] =NOP_0
84:: [26] =MOVI B,A            // (A) <- (B)
87:: [39] =DEC C               // C <- C - 1
89:: [35] =IFZ C               // if C == 0 then:
91:: [8] =JMPF                // ip <- template position 
92:: [46] =NOP_0
93:: [47] =NOP_1
94:: [38] =INC E               // E <- E + 1
96:: [38] =INC A               // A <- A + 1
98:: [38] =INC B               // B <- B + 1
100:: [9] =JMPB                // ip <- template position 
101:: [46] =NOP_0
102:: [47] =NOP_1
103:: [51] =51
104:: [46] =NOP_0
105:: [38] =INC E               // E <- E + 1
107:: [50] =50
108:: [46] =NOP_0
109:: [47] =NOP_1
110:: [46] =NOP_0
111:: [41] =POP C               // C <- pop()
113:: [41] =POP B               // B <- pop()
115:: [41] =POP I               // I <- pop()
117:: [6] =RET                 // ip <- pop()
118:: [47] =NOP_1
119:: [47] =NOP_1
120:: [47] =NOP_1
121:: [46] =NOP_0
